## This is a basic workflow to help you get started with Actions

name: CI

## Controls when the workflow will run
on:
#  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    tags:
      - '*'
jobs:
  build:
    runs-on: ubuntu-latest
#Define outputs for tags    
    outputs:
      output1: ${{ steps.vars.outputs.tag }}
      colorado-prd: ${{ steps.check-tag.outputs.match }}
      colorado-stg: ${{ steps.check-tag1.outputs.match }}
      califor-prod: ${{ steps.check-tag2.outputs.match }}
      califor-stg: ${{ steps.check-tag3.outputs.match }}

    steps:
      - uses: actions/checkout@v2

      - name: Check Tag
        id: check-tag
        run: |
          if [[ ${{ github.event.ref }} =~ ^refs/tags/colorado-prod-v[0-9]+\.[0-9]+\.[0-9]+$ ]]; then
          echo ::set-output name=match::true
          fi

      - name: Check Tag1
        id: check-tag1
        run: |
          if [[ ${{ github.event.ref }} =~ ^refs/tags/colorado-stg-v[0-9]+\.[0-9]+\.[0-9]+$ ]]; then
          echo ::set-output name=match::true
          fi

      - name: Check Tag2
        id: check-tag2 
        run: |
          if [[ ${{ github.event.ref }} =~ ^refs/tags/califor-prod-v[0-9]+\.[0-9]+\.[0-9]+$ ]]; then
          echo ::set-output name=match::true
          fi

      - name: Check Tag3
        id: check-tag3 
        run: |
          if [[ ${{ github.event.ref }} =~ ^refs/tags/califor-stg-v[0-9]+\.[0-9]+\.[0-9]+$ ]]; then
          echo ::set-output name=match::true
          fi    

      - name: Set output
        id: vars
        run: echo ::set-output name=tag::${GITHUB_REF#refs/*/}

      - name: Check output
        env:
          RELEASE_VERSION: ${{ steps.vars.outputs.tag }}
        run: |
          echo $RELEASE_VERSION
          echo ${{ steps.vars.outputs.tag }}

  deploy-colorado-prod:
    needs: build
    runs-on: ubuntu-latest
    if: needs.build.outputs.colorado-prd == 'true'
    steps:
      - name: Download built frontend files
        run: |
          echo "Build colorado production tag"

  deploy-colorado-stg:
    needs: build
    runs-on: ubuntu-latest
    if: needs.build.outputs.colorado-stg == 'true'
    steps:
      - name: Download built frontend files
        run: |
          echo "Build colorado stage tag"

  deploy-califor-prod:
    needs: build
    runs-on: ubuntu-latest
    if: needs.build.outputs.califor-prod == 'true'
    steps:
      - name: Download built frontend files
        run: |
          echo "Build califor production tag"

  deploy-califor-stg:
    needs: build
    runs-on: ubuntu-latest
    if: needs.build.outputs.califor-stg == 'true'
    steps:
      - name: Download built frontend files
        run: |
          echo "Build califor stage tag"